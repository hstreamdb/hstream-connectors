/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'io.hstream:java-toolkit:0.1.0-SNAPSHOT'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'

    compileOnly 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.0'

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

var imageVersion = System.getenv("CONNECTOR_IMAGE_VERSION")
if (imageVersion == null) {
    imageVersion = "latest"
}

task buildImages(type: Exec) {
    dependsOn(installDist)
    commandLine "docker", "build", "..", "-f", "../docker/Dockerfile", "-t", "hstreamdb/source-generator:${imageVersion}"
}

application {
    // Define the main class for the application.
    mainClass = 'source.GeneratorSourceTask'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
